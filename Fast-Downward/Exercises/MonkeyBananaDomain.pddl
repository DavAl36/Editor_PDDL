(define (domain MonkeyBananaProblemDomain)
	(:requirements :strips)
	
	(:predicates    (monkey ?mo)
					(banana ?ba)
					(box ?bo)
					(position ?po)
					(at ?what ?where)
					(adj ?pos1 ?pos2)
					(bananaPosition ?pos)
					(isBananaGrabbed ?ba)
	)
	
	(:action move
		:parameters     (?mo ?pos1 ?pos2)
		:precondition   (and    (monkey ?mo)
								(position ?pos1)
								(position ?pos2)
								(at ?mo ?pos1)
								(adj ?pos1 ?pos2)
						)
		:effect			(and    (not(at ?mo ?pos1))
							    (at ?mo ?pos2)
						)
	)
	
	(:action moveBox
		:parameters     (?mo ?bo ?pos1 ?pos2)
		:precondition   (and    (monkey ?mo)
								(box ?bo)
								(position ?pos1)
								(position ?pos2)
								(adj ?pos1 ?pos2)
								(at ?mo ?pos1)
								(at ?bo ?pos1)
						)
		:effect 				(and    (not (at ?mo ?pos1))
										(at ?mo ?pos2)
										(not (at ?bo ?pos1))
										(at ?bo ?pos2)
								)
	)
	
	(:action takeBanana
		:parameters 	(?mo ?ba ?bo ?pos)
		:precondition	(and (monkey ?mo)
										(banana ?ba)
										(box ?bo)
										(isBananaGrabbed ?ba)
										(bananaPosition ?pos)
										(at ?mo ?pos)
										(at ?bo ?pos)
								)
		:effect 				(and (not(isBananaGrabbed ?ba))
								)
	)
)